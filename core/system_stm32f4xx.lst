   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"system_stm32f4xx.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.SystemInit,"ax",%progbits
  21              		.align	2
  22              		.p2align 4,,15
  23              		.global	SystemInit
  24              		.thumb
  25              		.thumb_func
  27              	SystemInit:
  28              	.LFB112:
  29              		.file 1 "core/system_stm32f4xx.c"
   1:core/system_stm32f4xx.c **** /**
   2:core/system_stm32f4xx.c ****   ******************************************************************************
   3:core/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:core/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:core/system_stm32f4xx.c ****   * @version V1.3.0
   6:core/system_stm32f4xx.c ****   * @date    08-November-2013
   7:core/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:core/system_stm32f4xx.c ****   *          This file contains the system clock configuration for STM32F4xx devices.
   9:core/system_stm32f4xx.c ****   *             
  10:core/system_stm32f4xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  11:core/system_stm32f4xx.c ****   *     user application:
  12:core/system_stm32f4xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  13:core/system_stm32f4xx.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  14:core/system_stm32f4xx.c ****   *                      depending on the configuration made in the clock xls tool. 
  15:core/system_stm32f4xx.c ****   *                      This function is called at startup just after reset and 
  16:core/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  17:core/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  18:core/system_stm32f4xx.c ****   *
  19:core/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  20:core/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  21:core/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  22:core/system_stm32f4xx.c ****   *                                     
  23:core/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  24:core/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  25:core/system_stm32f4xx.c ****   *                                 during program execution.
  26:core/system_stm32f4xx.c ****   *
  27:core/system_stm32f4xx.c ****   * 2. After each device reset the HSI (16 MHz) is used as system clock source.
  28:core/system_stm32f4xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f4xx.s" file, to
  29:core/system_stm32f4xx.c ****   *    configure the system clock before to branch to main program.
  30:core/system_stm32f4xx.c ****   *
  31:core/system_stm32f4xx.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  32:core/system_stm32f4xx.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  33:core/system_stm32f4xx.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  34:core/system_stm32f4xx.c ****   *
  35:core/system_stm32f4xx.c ****   * 4. The default value of HSE crystal is set to 25MHz, refer to "HSE_VALUE" define
  36:core/system_stm32f4xx.c ****   *    in "stm32f4xx.h" file. When HSE is used as system clock source, directly or
  37:core/system_stm32f4xx.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  38:core/system_stm32f4xx.c ****   *    value to your own configuration.
  39:core/system_stm32f4xx.c ****   *
  40:core/system_stm32f4xx.c ****   * 5. This file configures the system clock as follows:
  41:core/system_stm32f4xx.c ****   *=============================================================================
  42:core/system_stm32f4xx.c ****   *=============================================================================
  43:core/system_stm32f4xx.c ****   *                    Supported STM32F40xxx/41xxx devices
  44:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  45:core/system_stm32f4xx.c ****   *        System Clock source                    | PLL (HSE)
  46:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  47:core/system_stm32f4xx.c ****   *        SYSCLK(Hz)                             | 168000000
  48:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  49:core/system_stm32f4xx.c ****   *        HCLK(Hz)                               | 168000000
  50:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  51:core/system_stm32f4xx.c ****   *        AHB Prescaler                          | 1
  52:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  53:core/system_stm32f4xx.c ****   *        APB1 Prescaler                         | 4
  54:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  55:core/system_stm32f4xx.c ****   *        APB2 Prescaler                         | 2
  56:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  57:core/system_stm32f4xx.c ****   *        HSE Frequency(Hz)                      | 25000000
  58:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  59:core/system_stm32f4xx.c ****   *        PLL_M                                  | 25
  60:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  61:core/system_stm32f4xx.c ****   *        PLL_N                                  | 336
  62:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  63:core/system_stm32f4xx.c ****   *        PLL_P                                  | 2
  64:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  65:core/system_stm32f4xx.c ****   *        PLL_Q                                  | 7
  66:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  67:core/system_stm32f4xx.c ****   *        PLLI2S_N                               | NA
  68:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  69:core/system_stm32f4xx.c ****   *        PLLI2S_R                               | NA
  70:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  71:core/system_stm32f4xx.c ****   *        I2S input clock                        | NA
  72:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  73:core/system_stm32f4xx.c ****   *        VDD(V)                                 | 3.3
  74:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  75:core/system_stm32f4xx.c ****   *        Main regulator output voltage          | Scale1 mode
  76:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  77:core/system_stm32f4xx.c ****   *        Flash Latency(WS)                      | 5
  78:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  79:core/system_stm32f4xx.c ****   *        Prefetch Buffer                        | ON
  80:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  81:core/system_stm32f4xx.c ****   *        Instruction cache                      | ON
  82:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  83:core/system_stm32f4xx.c ****   *        Data cache                             | ON
  84:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  85:core/system_stm32f4xx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
  86:core/system_stm32f4xx.c ****   *        SDIO and RNG clock                     |
  87:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  88:core/system_stm32f4xx.c ****   *=============================================================================
  89:core/system_stm32f4xx.c ****   *=============================================================================
  90:core/system_stm32f4xx.c ****   *                    Supported STM32F42xxx/43xxx devices
  91:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  92:core/system_stm32f4xx.c ****   *        System Clock source                    | PLL (HSE)
  93:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  94:core/system_stm32f4xx.c ****   *        SYSCLK(Hz)                             | 180000000
  95:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  96:core/system_stm32f4xx.c ****   *        HCLK(Hz)                               | 180000000
  97:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  98:core/system_stm32f4xx.c ****   *        AHB Prescaler                          | 1
  99:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 100:core/system_stm32f4xx.c ****   *        APB1 Prescaler                         | 4
 101:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 102:core/system_stm32f4xx.c ****   *        APB2 Prescaler                         | 2
 103:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 104:core/system_stm32f4xx.c ****   *        HSE Frequency(Hz)                      | 25000000
 105:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 106:core/system_stm32f4xx.c ****   *        PLL_M                                  | 25
 107:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 108:core/system_stm32f4xx.c ****   *        PLL_N                                  | 360
 109:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 110:core/system_stm32f4xx.c ****   *        PLL_P                                  | 2
 111:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 112:core/system_stm32f4xx.c ****   *        PLL_Q                                  | 7
 113:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 114:core/system_stm32f4xx.c ****   *        PLLI2S_N                               | NA
 115:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 116:core/system_stm32f4xx.c ****   *        PLLI2S_R                               | NA
 117:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 118:core/system_stm32f4xx.c ****   *        I2S input clock                        | NA
 119:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 120:core/system_stm32f4xx.c ****   *        VDD(V)                                 | 3.3
 121:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 122:core/system_stm32f4xx.c ****   *        Main regulator output voltage          | Scale1 mode
 123:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 124:core/system_stm32f4xx.c ****   *        Flash Latency(WS)                      | 5
 125:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 126:core/system_stm32f4xx.c ****   *        Prefetch Buffer                        | ON
 127:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 128:core/system_stm32f4xx.c ****   *        Instruction cache                      | ON
 129:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 130:core/system_stm32f4xx.c ****   *        Data cache                             | ON
 131:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 132:core/system_stm32f4xx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
 133:core/system_stm32f4xx.c ****   *        SDIO and RNG clock                     |
 134:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 135:core/system_stm32f4xx.c ****   *=============================================================================
 136:core/system_stm32f4xx.c ****   *=============================================================================
 137:core/system_stm32f4xx.c ****   *                         Supported STM32F401xx devices
 138:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 139:core/system_stm32f4xx.c ****   *        System Clock source                    | PLL (HSE)
 140:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 141:core/system_stm32f4xx.c ****   *        SYSCLK(Hz)                             | 84000000
 142:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 143:core/system_stm32f4xx.c ****   *        HCLK(Hz)                               | 84000000
 144:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 145:core/system_stm32f4xx.c ****   *        AHB Prescaler                          | 1
 146:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 147:core/system_stm32f4xx.c ****   *        APB1 Prescaler                         | 2
 148:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 149:core/system_stm32f4xx.c ****   *        APB2 Prescaler                         | 1
 150:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 151:core/system_stm32f4xx.c ****   *        HSE Frequency(Hz)                      | 25000000
 152:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 153:core/system_stm32f4xx.c ****   *        PLL_M                                  | 25
 154:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 155:core/system_stm32f4xx.c ****   *        PLL_N                                  | 336
 156:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 157:core/system_stm32f4xx.c ****   *        PLL_P                                  | 4
 158:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 159:core/system_stm32f4xx.c ****   *        PLL_Q                                  | 7
 160:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 161:core/system_stm32f4xx.c ****   *        PLLI2S_N                               | NA
 162:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 163:core/system_stm32f4xx.c ****   *        PLLI2S_R                               | NA
 164:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 165:core/system_stm32f4xx.c ****   *        I2S input clock                        | NA
 166:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 167:core/system_stm32f4xx.c ****   *        VDD(V)                                 | 3.3
 168:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 169:core/system_stm32f4xx.c ****   *        Main regulator output voltage          | Scale1 mode
 170:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 171:core/system_stm32f4xx.c ****   *        Flash Latency(WS)                      | 2
 172:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 173:core/system_stm32f4xx.c ****   *        Prefetch Buffer                        | ON
 174:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 175:core/system_stm32f4xx.c ****   *        Instruction cache                      | ON
 176:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 177:core/system_stm32f4xx.c ****   *        Data cache                             | ON
 178:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 179:core/system_stm32f4xx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
 180:core/system_stm32f4xx.c ****   *        SDIO and RNG clock                     |
 181:core/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
 182:core/system_stm32f4xx.c ****   *=============================================================================      
 183:core/system_stm32f4xx.c ****   ****************************************************************************** 
 184:core/system_stm32f4xx.c ****   * @attention
 185:core/system_stm32f4xx.c ****   *
 186:core/system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
 187:core/system_stm32f4xx.c ****   *
 188:core/system_stm32f4xx.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 189:core/system_stm32f4xx.c ****   * You may not use this file except in compliance with the License.
 190:core/system_stm32f4xx.c ****   * You may obtain a copy of the License at:
 191:core/system_stm32f4xx.c ****   *
 192:core/system_stm32f4xx.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 193:core/system_stm32f4xx.c ****   *
 194:core/system_stm32f4xx.c ****   * Unless required by applicable law or agreed to in writing, software 
 195:core/system_stm32f4xx.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 196:core/system_stm32f4xx.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 197:core/system_stm32f4xx.c ****   * See the License for the specific language governing permissions and
 198:core/system_stm32f4xx.c ****   * limitations under the License.
 199:core/system_stm32f4xx.c ****   *
 200:core/system_stm32f4xx.c ****   ******************************************************************************
 201:core/system_stm32f4xx.c ****   */
 202:core/system_stm32f4xx.c **** 
 203:core/system_stm32f4xx.c **** /** @addtogroup CMSIS
 204:core/system_stm32f4xx.c ****   * @{
 205:core/system_stm32f4xx.c ****   */
 206:core/system_stm32f4xx.c **** 
 207:core/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
 208:core/system_stm32f4xx.c ****   * @{
 209:core/system_stm32f4xx.c ****   */  
 210:core/system_stm32f4xx.c ****   
 211:core/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
 212:core/system_stm32f4xx.c ****   * @{
 213:core/system_stm32f4xx.c ****   */
 214:core/system_stm32f4xx.c **** 
 215:core/system_stm32f4xx.c **** #include "stm32f4xx.h"
 216:core/system_stm32f4xx.c **** 
 217:core/system_stm32f4xx.c **** /**
 218:core/system_stm32f4xx.c ****   * @}
 219:core/system_stm32f4xx.c ****   */
 220:core/system_stm32f4xx.c **** 
 221:core/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
 222:core/system_stm32f4xx.c ****   * @{
 223:core/system_stm32f4xx.c ****   */
 224:core/system_stm32f4xx.c **** 
 225:core/system_stm32f4xx.c **** /**
 226:core/system_stm32f4xx.c ****   * @}
 227:core/system_stm32f4xx.c ****   */
 228:core/system_stm32f4xx.c **** 
 229:core/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
 230:core/system_stm32f4xx.c ****   * @{
 231:core/system_stm32f4xx.c ****   */
 232:core/system_stm32f4xx.c **** 
 233:core/system_stm32f4xx.c **** /************************* Miscellaneous Configuration ************************/
 234:core/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM or SDRAM mounted
 235:core/system_stm32f4xx.c ****      on STM324xG_EVAL/STM324x7I_EVAL/STM324x9I_EVAL boards as data memory  */
 236:core/system_stm32f4xx.c ****      
 237:core/system_stm32f4xx.c **** #if defined (STM32F40_41xxx) || defined (STM32F427_437xx) || defined (STM32F429_439xx)
 238:core/system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
 239:core/system_stm32f4xx.c **** #endif /* STM32F40_41xxx || STM32F427_437x || STM32F429_439xx */
 240:core/system_stm32f4xx.c **** 
 241:core/system_stm32f4xx.c **** #if defined (STM32F427_437xx) || defined (STM32F429_439xx)
 242:core/system_stm32f4xx.c **** /* #define DATA_IN_ExtSDRAM */
 243:core/system_stm32f4xx.c **** #endif /* STM32F427_437x || STM32F429_439xx */ 
 244:core/system_stm32f4xx.c **** 
 245:core/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 246:core/system_stm32f4xx.c ****      Internal SRAM. */
 247:core/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 248:core/system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 249:core/system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
 250:core/system_stm32f4xx.c **** /******************************************************************************/
 251:core/system_stm32f4xx.c **** 
 252:core/system_stm32f4xx.c **** /************************* PLL Parameters *************************************/
 253:core/system_stm32f4xx.c **** /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N */
 254:core/system_stm32f4xx.c **** #define PLL_M      8
 255:core/system_stm32f4xx.c **** /* USB OTG FS, SDIO and RNG Clock =  PLL_VCO / PLLQ */
 256:core/system_stm32f4xx.c **** #define PLL_Q      7
 257:core/system_stm32f4xx.c **** 
 258:core/system_stm32f4xx.c **** #if defined (STM32F40_41xxx)
 259:core/system_stm32f4xx.c **** #define PLL_N      336
 260:core/system_stm32f4xx.c **** /* SYSCLK = PLL_VCO / PLL_P */
 261:core/system_stm32f4xx.c **** #define PLL_P      2
 262:core/system_stm32f4xx.c **** #endif /* STM32F40_41xxx */
 263:core/system_stm32f4xx.c **** 
 264:core/system_stm32f4xx.c **** #if defined (STM32F427_437xx) || defined (STM32F429_439xx)
 265:core/system_stm32f4xx.c **** #define PLL_N      360
 266:core/system_stm32f4xx.c **** /* SYSCLK = PLL_VCO / PLL_P */
 267:core/system_stm32f4xx.c **** #define PLL_P      2
 268:core/system_stm32f4xx.c **** #endif /* STM32F427_437x || STM32F429_439xx */
 269:core/system_stm32f4xx.c **** 
 270:core/system_stm32f4xx.c **** #if defined (STM32F401xx)
 271:core/system_stm32f4xx.c **** #define PLL_N      336
 272:core/system_stm32f4xx.c **** /* SYSCLK = PLL_VCO / PLL_P */
 273:core/system_stm32f4xx.c **** #define PLL_P      4
 274:core/system_stm32f4xx.c **** #endif /* STM32F401xx */
 275:core/system_stm32f4xx.c **** 
 276:core/system_stm32f4xx.c **** /******************************************************************************/
 277:core/system_stm32f4xx.c **** 
 278:core/system_stm32f4xx.c **** /**
 279:core/system_stm32f4xx.c ****   * @}
 280:core/system_stm32f4xx.c ****   */
 281:core/system_stm32f4xx.c **** 
 282:core/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 283:core/system_stm32f4xx.c ****   * @{
 284:core/system_stm32f4xx.c ****   */
 285:core/system_stm32f4xx.c **** 
 286:core/system_stm32f4xx.c **** /**
 287:core/system_stm32f4xx.c ****   * @}
 288:core/system_stm32f4xx.c ****   */
 289:core/system_stm32f4xx.c **** 
 290:core/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 291:core/system_stm32f4xx.c ****   * @{
 292:core/system_stm32f4xx.c ****   */
 293:core/system_stm32f4xx.c **** 
 294:core/system_stm32f4xx.c **** #if defined (STM32F40_41xxx)
 295:core/system_stm32f4xx.c ****   uint32_t SystemCoreClock = 168000000;
 296:core/system_stm32f4xx.c **** #endif /* STM32F40_41xxx */
 297:core/system_stm32f4xx.c **** 
 298:core/system_stm32f4xx.c **** #if defined (STM32F427_437xx) || defined (STM32F429_439xx)
 299:core/system_stm32f4xx.c ****   uint32_t SystemCoreClock = 180000000;
 300:core/system_stm32f4xx.c **** #endif /* STM32F427_437x || STM32F429_439xx */
 301:core/system_stm32f4xx.c **** 
 302:core/system_stm32f4xx.c **** #if defined (STM32F401xx)
 303:core/system_stm32f4xx.c ****   uint32_t SystemCoreClock = 84000000;
 304:core/system_stm32f4xx.c **** #endif /* STM32F401xx */
 305:core/system_stm32f4xx.c **** 
 306:core/system_stm32f4xx.c ****   __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 307:core/system_stm32f4xx.c **** 
 308:core/system_stm32f4xx.c **** /**
 309:core/system_stm32f4xx.c ****   * @}
 310:core/system_stm32f4xx.c ****   */
 311:core/system_stm32f4xx.c **** 
 312:core/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 313:core/system_stm32f4xx.c ****   * @{
 314:core/system_stm32f4xx.c ****   */
 315:core/system_stm32f4xx.c **** 
 316:core/system_stm32f4xx.c **** static void SetSysClock(void);
 317:core/system_stm32f4xx.c **** 
 318:core/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 319:core/system_stm32f4xx.c **** static void SystemInit_ExtMemCtl(void); 
 320:core/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 321:core/system_stm32f4xx.c **** 
 322:core/system_stm32f4xx.c **** /**
 323:core/system_stm32f4xx.c ****   * @}
 324:core/system_stm32f4xx.c ****   */
 325:core/system_stm32f4xx.c **** 
 326:core/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 327:core/system_stm32f4xx.c ****   * @{
 328:core/system_stm32f4xx.c ****   */
 329:core/system_stm32f4xx.c **** 
 330:core/system_stm32f4xx.c **** /**
 331:core/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 332:core/system_stm32f4xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 333:core/system_stm32f4xx.c ****   *         SystemFrequency variable.
 334:core/system_stm32f4xx.c ****   * @param  None
 335:core/system_stm32f4xx.c ****   * @retval None
 336:core/system_stm32f4xx.c ****   */
 337:core/system_stm32f4xx.c **** void SystemInit(void)
 338:core/system_stm32f4xx.c **** {
  30              		.loc 1 338 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 339:core/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 340:core/system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 341:core/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  35              		.loc 1 341 0
  36 0000 4FF46D42 		mov	r2, #60672
  37 0004 CEF20002 		movt	r2, 57344
 342:core/system_stm32f4xx.c ****   #endif
 343:core/system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 344:core/system_stm32f4xx.c ****   /* Set HSION bit */
 345:core/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
  38              		.loc 1 345 0
  39 0008 4FF46053 		mov	r3, #14336
 341:core/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  40              		.loc 1 341 0
  41 000c D2F88810 		ldr	r1, [r2, #136]
  42 0010 D2F88800 		ldr	r0, [r2, #136]
  43              		.loc 1 345 0
  44 0014 C4F20203 		movt	r3, 16386
 341:core/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  45              		.loc 1 341 0
  46 0018 41F47000 		orr	r0, r1, #15728640
  47 001c C2F88800 		str	r0, [r2, #136]
  48              		.loc 1 345 0
  49 0020 1A68     		ldr	r2, [r3, #0]
  50 0022 1968     		ldr	r1, [r3, #0]
  51 0024 42F00101 		orr	r1, r2, #1
  52 0028 1960     		str	r1, [r3, #0]
 341:core/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  53              		.loc 1 341 0
  54 002a 0022     		movs	r2, #0
 346:core/system_stm32f4xx.c **** 
 347:core/system_stm32f4xx.c ****   /* Reset CFGR register */
 348:core/system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
  55              		.loc 1 348 0
  56 002c 9968     		ldr	r1, [r3, #8]
  57 002e 9A60     		str	r2, [r3, #8]
 349:core/system_stm32f4xx.c **** 
 350:core/system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 351:core/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  58              		.loc 1 351 0
  59 0030 1868     		ldr	r0, [r3, #0]
  60 0032 1968     		ldr	r1, [r3, #0]
  61 0034 20F08471 		bic	r1, r0, #17301504
  62 0038 21F48030 		bic	r0, r1, #65536
 352:core/system_stm32f4xx.c **** 
 353:core/system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 354:core/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
  63              		.loc 1 354 0
  64 003c 43F21001 		movw	r1, #12304
 351:core/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  65              		.loc 1 351 0
  66 0040 1860     		str	r0, [r3, #0]
  67              		.loc 1 354 0
  68 0042 C2F20041 		movt	r1, 9216
  69 0046 5868     		ldr	r0, [r3, #4]
  70 0048 5960     		str	r1, [r3, #4]
 355:core/system_stm32f4xx.c **** 
 356:core/system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 357:core/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  71              		.loc 1 357 0
  72 004a 1968     		ldr	r1, [r3, #0]
  73 004c 1868     		ldr	r0, [r3, #0]
 338:core/system_stm32f4xx.c **** {
  74              		.loc 1 338 0
  75 004e 82B0     		sub	sp, sp, #8
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 8
  78              		.loc 1 357 0
  79 0050 21F48020 		bic	r0, r1, #262144
  80 0054 1860     		str	r0, [r3, #0]
 358:core/system_stm32f4xx.c **** 
 359:core/system_stm32f4xx.c ****   /* Disable all interrupts */
 360:core/system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
  81              		.loc 1 360 0
  82 0056 D968     		ldr	r1, [r3, #12]
  83 0058 DA60     		str	r2, [r3, #12]
  84              	.LBB4:
  85              	.LBB5:
 361:core/system_stm32f4xx.c **** 
 362:core/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 363:core/system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 364:core/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 365:core/system_stm32f4xx.c ****          
 366:core/system_stm32f4xx.c ****   /* Configure the System clock source, PLL Multiplier and Divider factors, 
 367:core/system_stm32f4xx.c ****      AHB/APBx prescalers and Flash settings ----------------------------------*/
 368:core/system_stm32f4xx.c ****   SetSysClock();
 369:core/system_stm32f4xx.c **** 
 370:core/system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 371:core/system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 372:core/system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 373:core/system_stm32f4xx.c **** #else
 374:core/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 375:core/system_stm32f4xx.c **** #endif
 376:core/system_stm32f4xx.c **** }
 377:core/system_stm32f4xx.c **** 
 378:core/system_stm32f4xx.c **** /**
 379:core/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 380:core/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 381:core/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 382:core/system_stm32f4xx.c ****   *         other parameters.
 383:core/system_stm32f4xx.c ****   *           
 384:core/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 385:core/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 386:core/system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 387:core/system_stm32f4xx.c ****   *     
 388:core/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 389:core/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 390:core/system_stm32f4xx.c ****   *           constant and the selected clock source:
 391:core/system_stm32f4xx.c ****   *             
 392:core/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 393:core/system_stm32f4xx.c ****   *                                              
 394:core/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 395:core/system_stm32f4xx.c ****   *                          
 396:core/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 397:core/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 398:core/system_stm32f4xx.c ****   *         
 399:core/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx.h file (default value
 400:core/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 401:core/system_stm32f4xx.c ****   *             in voltage and temperature.   
 402:core/system_stm32f4xx.c ****   *    
 403:core/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx.h file (default value
 404:core/system_stm32f4xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 405:core/system_stm32f4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 406:core/system_stm32f4xx.c ****   *              have wrong result.
 407:core/system_stm32f4xx.c ****   *                
 408:core/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 409:core/system_stm32f4xx.c ****   *           value for HSE crystal.
 410:core/system_stm32f4xx.c ****   *     
 411:core/system_stm32f4xx.c ****   * @param  None
 412:core/system_stm32f4xx.c ****   * @retval None
 413:core/system_stm32f4xx.c ****   */
 414:core/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 415:core/system_stm32f4xx.c **** {
 416:core/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 417:core/system_stm32f4xx.c ****   
 418:core/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 419:core/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 420:core/system_stm32f4xx.c **** 
 421:core/system_stm32f4xx.c ****   switch (tmp)
 422:core/system_stm32f4xx.c ****   {
 423:core/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 424:core/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 425:core/system_stm32f4xx.c ****       break;
 426:core/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 427:core/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 428:core/system_stm32f4xx.c ****       break;
 429:core/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 430:core/system_stm32f4xx.c **** 
 431:core/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 432:core/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 433:core/system_stm32f4xx.c ****          */    
 434:core/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 435:core/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 436:core/system_stm32f4xx.c ****       
 437:core/system_stm32f4xx.c ****       if (pllsource != 0)
 438:core/system_stm32f4xx.c ****       {
 439:core/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 440:core/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 441:core/system_stm32f4xx.c ****       }
 442:core/system_stm32f4xx.c ****       else
 443:core/system_stm32f4xx.c ****       {
 444:core/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 445:core/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 446:core/system_stm32f4xx.c ****       }
 447:core/system_stm32f4xx.c **** 
 448:core/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 449:core/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 450:core/system_stm32f4xx.c ****       break;
 451:core/system_stm32f4xx.c ****     default:
 452:core/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 453:core/system_stm32f4xx.c ****       break;
 454:core/system_stm32f4xx.c ****   }
 455:core/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 456:core/system_stm32f4xx.c ****   /* Get HCLK prescaler */
 457:core/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 458:core/system_stm32f4xx.c ****   /* HCLK frequency */
 459:core/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 460:core/system_stm32f4xx.c **** }
 461:core/system_stm32f4xx.c **** 
 462:core/system_stm32f4xx.c **** /**
 463:core/system_stm32f4xx.c ****   * @brief  Configures the System clock source, PLL Multiplier and Divider factors, 
 464:core/system_stm32f4xx.c ****   *         AHB/APBx prescalers and Flash settings
 465:core/system_stm32f4xx.c ****   * @Note   This function should be called only once the RCC clock configuration  
 466:core/system_stm32f4xx.c ****   *         is reset to the default reset state (done in SystemInit() function).   
 467:core/system_stm32f4xx.c ****   * @param  None
 468:core/system_stm32f4xx.c ****   * @retval None
 469:core/system_stm32f4xx.c ****   */
 470:core/system_stm32f4xx.c **** static void SetSysClock(void)
 471:core/system_stm32f4xx.c **** {
 472:core/system_stm32f4xx.c **** /******************************************************************************/
 473:core/system_stm32f4xx.c **** /*            PLL (clocked by HSE) used as System clock source                */
 474:core/system_stm32f4xx.c **** /******************************************************************************/
 475:core/system_stm32f4xx.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
  86              		.loc 1 475 0
  87 005a 0092     		str	r2, [sp, #0]
  88              	.LVL0:
  89 005c 0192     		str	r2, [sp, #4]
  90              	.LVL1:
 476:core/system_stm32f4xx.c ****   
 477:core/system_stm32f4xx.c ****   /* Enable HSE */
 478:core/system_stm32f4xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
  91              		.loc 1 478 0
  92 005e 1A68     		ldr	r2, [r3, #0]
  93 0060 1968     		ldr	r1, [r3, #0]
  94 0062 42F48031 		orr	r1, r2, #65536
  95 0066 1960     		str	r1, [r3, #0]
 479:core/system_stm32f4xx.c ****  
 480:core/system_stm32f4xx.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 481:core/system_stm32f4xx.c ****   do
 482:core/system_stm32f4xx.c ****   {
 483:core/system_stm32f4xx.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
  96              		.loc 1 483 0
  97 0068 1846     		mov	r0, r3
  98 006a 03E0     		b	.L3
  99              	.L28:
 484:core/system_stm32f4xx.c ****     StartUpCounter++;
 485:core/system_stm32f4xx.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 100              		.loc 1 485 0
 101 006c 0099     		ldr	r1, [sp, #0]
 102 006e B1F5A04F 		cmp	r1, #20480
 103 0072 09D0     		beq	.L2
 104              	.L3:
 483:core/system_stm32f4xx.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 105              		.loc 1 483 0
 106 0074 0368     		ldr	r3, [r0, #0]
 107 0076 03F40032 		and	r2, r3, #131072
 108              	.LVL2:
 109 007a 0192     		str	r2, [sp, #4]
 110              	.LVL3:
 484:core/system_stm32f4xx.c ****     StartUpCounter++;
 111              		.loc 1 484 0
 112 007c 0099     		ldr	r1, [sp, #0]
 113 007e 4B1C     		adds	r3, r1, #1
 114              	.LVL4:
 115 0080 0093     		str	r3, [sp, #0]
 116              	.LVL5:
 117              		.loc 1 485 0
 118 0082 019A     		ldr	r2, [sp, #4]
 119              	.LVL6:
 120 0084 002A     		cmp	r2, #0
 121 0086 F1D0     		beq	.L28
 122              	.L2:
 486:core/system_stm32f4xx.c **** 
 487:core/system_stm32f4xx.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 123              		.loc 1 487 0
 124 0088 4FF46050 		mov	r0, #14336
 125 008c C4F20200 		movt	r0, 16386
 126 0090 0368     		ldr	r3, [r0, #0]
 127 0092 13F40032 		ands	r2, r3, #131072
 128 0096 0ED0     		beq	.L4
 488:core/system_stm32f4xx.c ****   {
 489:core/system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x01;
 129              		.loc 1 489 0
 130 0098 0121     		movs	r1, #1
 131 009a 0191     		str	r1, [sp, #4]
 490:core/system_stm32f4xx.c ****   }
 491:core/system_stm32f4xx.c ****   else
 492:core/system_stm32f4xx.c ****   {
 493:core/system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x00;
 494:core/system_stm32f4xx.c ****   }
 495:core/system_stm32f4xx.c **** 
 496:core/system_stm32f4xx.c ****   if (HSEStatus == (uint32_t)0x01)
 132              		.loc 1 496 0
 133 009c 0198     		ldr	r0, [sp, #4]
 134 009e 0128     		cmp	r0, #1
 135 00a0 0DD0     		beq	.L6
 136              	.L11:
 137              	.LBE5:
 138              	.LBE4:
 374:core/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 139              		.loc 1 374 0
 140 00a2 4FF46D40 		mov	r0, #60672
 141 00a6 CEF20000 		movt	r0, 57344
 142 00aa 4FF00061 		mov	r1, #134217728
 143 00ae 8268     		ldr	r2, [r0, #8]
 144 00b0 8160     		str	r1, [r0, #8]
 376:core/system_stm32f4xx.c **** }
 145              		.loc 1 376 0
 146 00b2 02B0     		add	sp, sp, #8
 147 00b4 7047     		bx	lr
 148              	.L4:
 149              	.LBB7:
 150              	.LBB6:
 493:core/system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x00;
 151              		.loc 1 493 0
 152 00b6 0192     		str	r2, [sp, #4]
 153              		.loc 1 496 0
 154 00b8 0198     		ldr	r0, [sp, #4]
 155 00ba 0128     		cmp	r0, #1
 156 00bc F1D1     		bne	.L11
 157              	.L6:
 497:core/system_stm32f4xx.c ****   {
 498:core/system_stm32f4xx.c ****     /* Select regulator voltage output Scale 1 mode */
 499:core/system_stm32f4xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 158              		.loc 1 499 0
 159 00be 4FF46053 		mov	r3, #14336
 160 00c2 C4F20203 		movt	r3, 16386
 500:core/system_stm32f4xx.c ****     PWR->CR |= PWR_CR_VOS;
 161              		.loc 1 500 0
 162 00c6 4FF4E042 		mov	r2, #28672
 499:core/system_stm32f4xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 163              		.loc 1 499 0
 164 00ca 196C     		ldr	r1, [r3, #64]
 165 00cc 186C     		ldr	r0, [r3, #64]
 166              		.loc 1 500 0
 167 00ce C4F20002 		movt	r2, 16384
 499:core/system_stm32f4xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 168              		.loc 1 499 0
 169 00d2 41F08050 		orr	r0, r1, #268435456
 170 00d6 1864     		str	r0, [r3, #64]
 171              		.loc 1 500 0
 172 00d8 1168     		ldr	r1, [r2, #0]
 173 00da 1068     		ldr	r0, [r2, #0]
 174 00dc 41F44040 		orr	r0, r1, #49152
 175 00e0 1060     		str	r0, [r2, #0]
 501:core/system_stm32f4xx.c **** 
 502:core/system_stm32f4xx.c ****     /* HCLK = SYSCLK / 1*/
 503:core/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 176              		.loc 1 503 0
 177 00e2 9A68     		ldr	r2, [r3, #8]
 178 00e4 9968     		ldr	r1, [r3, #8]
 179 00e6 9A60     		str	r2, [r3, #8]
 504:core/system_stm32f4xx.c **** 
 505:core/system_stm32f4xx.c **** #if defined (STM32F40_41xxx) || defined (STM32F427_437xx) || defined (STM32F429_439xx)      
 506:core/system_stm32f4xx.c ****     /* PCLK2 = HCLK / 2*/
 507:core/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;
 180              		.loc 1 507 0
 181 00e8 9868     		ldr	r0, [r3, #8]
 182 00ea 9968     		ldr	r1, [r3, #8]
 183 00ec 40F40041 		orr	r1, r0, #32768
 184 00f0 9960     		str	r1, [r3, #8]
 508:core/system_stm32f4xx.c ****     
 509:core/system_stm32f4xx.c ****     /* PCLK1 = HCLK / 4*/
 510:core/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 185              		.loc 1 510 0
 186 00f2 9868     		ldr	r0, [r3, #8]
 187 00f4 9A68     		ldr	r2, [r3, #8]
 188 00f6 40F4A051 		orr	r1, r0, #5120
 511:core/system_stm32f4xx.c **** #endif /* STM32F40_41xxx || STM32F427_437x || STM32F429_439xx */
 512:core/system_stm32f4xx.c **** 
 513:core/system_stm32f4xx.c **** #if defined (STM32F401xx)
 514:core/system_stm32f4xx.c ****     /* PCLK2 = HCLK / 2*/
 515:core/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE2_DIV1;
 516:core/system_stm32f4xx.c ****     
 517:core/system_stm32f4xx.c ****     /* PCLK1 = HCLK / 4*/
 518:core/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV2;
 519:core/system_stm32f4xx.c **** #endif /* STM32F401xx */
 520:core/system_stm32f4xx.c ****    
 521:core/system_stm32f4xx.c ****     /* Configure the main PLL */
 522:core/system_stm32f4xx.c ****     RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 189              		.loc 1 522 0
 190 00fa 45F60822 		movw	r2, #23048
 510:core/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 191              		.loc 1 510 0
 192 00fe 9960     		str	r1, [r3, #8]
 193              		.loc 1 522 0
 194 0100 C0F24072 		movt	r2, 1856
 195 0104 5968     		ldr	r1, [r3, #4]
 196 0106 5A60     		str	r2, [r3, #4]
 523:core/system_stm32f4xx.c ****                    (RCC_PLLCFGR_PLLSRC_HSE) | (PLL_Q << 24);
 524:core/system_stm32f4xx.c **** 
 525:core/system_stm32f4xx.c ****     /* Enable the main PLL */
 526:core/system_stm32f4xx.c ****     RCC->CR |= RCC_CR_PLLON;
 197              		.loc 1 526 0
 198 0108 1868     		ldr	r0, [r3, #0]
 199 010a 1968     		ldr	r1, [r3, #0]
 200 010c 40F08071 		orr	r1, r0, #16777216
 201 0110 1960     		str	r1, [r3, #0]
 527:core/system_stm32f4xx.c **** 
 528:core/system_stm32f4xx.c ****     /* Wait till the main PLL is ready */
 529:core/system_stm32f4xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 202              		.loc 1 529 0
 203 0112 1A46     		mov	r2, r3
 204              	.L7:
 205 0114 1368     		ldr	r3, [r2, #0]
 206 0116 9B01     		lsls	r3, r3, #6
 207 0118 FCD5     		bpl	.L7
 530:core/system_stm32f4xx.c ****     {
 531:core/system_stm32f4xx.c ****     }
 532:core/system_stm32f4xx.c ****    
 533:core/system_stm32f4xx.c **** #if defined (STM32F427_437xx) || defined (STM32F429_439xx)
 534:core/system_stm32f4xx.c ****     /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
 535:core/system_stm32f4xx.c ****     PWR->CR |= PWR_CR_ODEN;
 208              		.loc 1 535 0
 209 011a 4FF4E043 		mov	r3, #28672
 210 011e C4F20003 		movt	r3, 16384
 536:core/system_stm32f4xx.c ****     while((PWR->CSR & PWR_CSR_ODRDY) == 0)
 211              		.loc 1 536 0
 212 0122 1946     		mov	r1, r3
 535:core/system_stm32f4xx.c ****     PWR->CR |= PWR_CR_ODEN;
 213              		.loc 1 535 0
 214 0124 1A68     		ldr	r2, [r3, #0]
 215 0126 1868     		ldr	r0, [r3, #0]
 216 0128 42F48030 		orr	r0, r2, #65536
 217 012c 1860     		str	r0, [r3, #0]
 218              	.L8:
 219              		.loc 1 536 0
 220 012e 4A68     		ldr	r2, [r1, #4]
 221 0130 4FF4E043 		mov	r3, #28672
 222 0134 D003     		lsls	r0, r2, #15
 223 0136 C4F20003 		movt	r3, 16384
 224 013a F8D5     		bpl	.L8
 537:core/system_stm32f4xx.c ****     {
 538:core/system_stm32f4xx.c ****     }
 539:core/system_stm32f4xx.c ****     PWR->CR |= PWR_CR_ODSWEN;
 225              		.loc 1 539 0
 226 013c 1868     		ldr	r0, [r3, #0]
 227 013e 1968     		ldr	r1, [r3, #0]
 228 0140 40F40031 		orr	r1, r0, #131072
 229 0144 1960     		str	r1, [r3, #0]
 230              	.L9:
 540:core/system_stm32f4xx.c ****     while((PWR->CSR & PWR_CSR_ODSWRDY) == 0)
 231              		.loc 1 540 0
 232 0146 5A68     		ldr	r2, [r3, #4]
 233 0148 9203     		lsls	r2, r2, #14
 234 014a FCD5     		bpl	.L9
 541:core/system_stm32f4xx.c ****     {
 542:core/system_stm32f4xx.c ****     }      
 543:core/system_stm32f4xx.c ****     /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
 544:core/system_stm32f4xx.c ****     FLASH->ACR = FLASH_ACR_PRFTEN | FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;
 235              		.loc 1 544 0
 236 014c 4FF47053 		mov	r3, #15360
 237 0150 C4F20203 		movt	r3, 16386
 545:core/system_stm32f4xx.c **** #endif /* STM32F427_437x || STM32F429_439xx  */
 546:core/system_stm32f4xx.c **** 
 547:core/system_stm32f4xx.c **** #if defined (STM32F40_41xxx)     
 548:core/system_stm32f4xx.c ****     /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
 549:core/system_stm32f4xx.c ****     FLASH->ACR = FLASH_ACR_PRFTEN | FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;
 550:core/system_stm32f4xx.c **** #endif /* STM32F40_41xxx  */
 551:core/system_stm32f4xx.c **** 
 552:core/system_stm32f4xx.c **** #if defined (STM32F401xx)
 553:core/system_stm32f4xx.c ****     /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
 554:core/system_stm32f4xx.c ****     FLASH->ACR = FLASH_ACR_PRFTEN | FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_2WS;
 555:core/system_stm32f4xx.c **** #endif /* STM32F401xx */
 556:core/system_stm32f4xx.c **** 
 557:core/system_stm32f4xx.c ****     /* Select the main PLL as system clock source */
 558:core/system_stm32f4xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 238              		.loc 1 558 0
 239 0154 4FF46050 		mov	r0, #14336
 544:core/system_stm32f4xx.c ****     FLASH->ACR = FLASH_ACR_PRFTEN | FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;
 240              		.loc 1 544 0
 241 0158 1968     		ldr	r1, [r3, #0]
 242              		.loc 1 558 0
 243 015a C4F20200 		movt	r0, 16386
 544:core/system_stm32f4xx.c ****     FLASH->ACR = FLASH_ACR_PRFTEN | FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;
 244              		.loc 1 544 0
 245 015e 40F20571 		movw	r1, #1797
 246 0162 1960     		str	r1, [r3, #0]
 247              		.loc 1 558 0
 248 0164 8268     		ldr	r2, [r0, #8]
 249 0166 8168     		ldr	r1, [r0, #8]
 250 0168 22F00303 		bic	r3, r2, #3
 251 016c 8360     		str	r3, [r0, #8]
 559:core/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_SW_PLL;
 252              		.loc 1 559 0
 253 016e 8268     		ldr	r2, [r0, #8]
 254 0170 8168     		ldr	r1, [r0, #8]
 255 0172 42F00201 		orr	r1, r2, #2
 256 0176 8160     		str	r1, [r0, #8]
 257              	.L10:
 560:core/system_stm32f4xx.c **** 
 561:core/system_stm32f4xx.c ****     /* Wait till the main PLL is used as system clock source */
 562:core/system_stm32f4xx.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
 258              		.loc 1 562 0
 259 0178 8368     		ldr	r3, [r0, #8]
 260 017a 03F00C02 		and	r2, r3, #12
 261 017e 082A     		cmp	r2, #8
 262 0180 FAD1     		bne	.L10
 263 0182 8EE7     		b	.L11
 264              	.LBE6:
 265              	.LBE7:
 266              		.cfi_endproc
 267              	.LFE112:
 269 0184 AFF30080 		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 269      AFF30080 
 269      AFF30080 
 270              		.align	2
 271              		.p2align 4,,15
 272              		.global	SystemCoreClockUpdate
 273              		.thumb
 274              		.thumb_func
 276              	SystemCoreClockUpdate:
 277              	.LFB113:
 415:core/system_stm32f4xx.c **** {
 278              		.loc 1 415 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              		@ link register save eliminated.
 283              	.LVL7:
 419:core/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 284              		.loc 1 419 0
 285 0000 4FF46053 		mov	r3, #14336
 286 0004 C4F20203 		movt	r3, 16386
 287 0008 9A68     		ldr	r2, [r3, #8]
 288              	.LVL8:
 289 000a 02F00C00 		and	r0, r2, #12
 290              	.LVL9:
 421:core/system_stm32f4xx.c ****   switch (tmp)
 291              		.loc 1 421 0
 292 000e 0428     		cmp	r0, #4
 293 0010 13D0     		beq	.L31
 294 0012 0828     		cmp	r0, #8
 295 0014 16D0     		beq	.L37
 296 0016 4FF41052 		mov	r2, #9216
 297 001a C0F2F402 		movt	r2, 244
 298              	.LVL10:
 299              	.L30:
 457:core/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 300              		.loc 1 457 0
 301 001e 4FF46053 		mov	r3, #14336
 302 0022 C4F20203 		movt	r3, 16386
 303 0026 1949     		ldr	r1, .L38
 304 0028 9868     		ldr	r0, [r3, #8]
 305 002a C0F30313 		ubfx	r3, r0, #4, #4
 306 002e C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 307              	.LVL11:
 459:core/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 308              		.loc 1 459 0
 309 0030 174B     		ldr	r3, .L38+4
 310 0032 22FA00F2 		lsr	r2, r2, r0
 311 0036 1A60     		str	r2, [r3, #0]
 312 0038 7047     		bx	lr
 313              	.LVL12:
 314              	.L31:
 428:core/system_stm32f4xx.c ****       break;
 315              		.loc 1 428 0
 316 003a 4FF49052 		mov	r2, #4608
 317 003e C0F27A02 		movt	r2, 122
 318 0042 ECE7     		b	.L30
 319              	.L37:
 434:core/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 320              		.loc 1 434 0
 321 0044 5868     		ldr	r0, [r3, #4]
 322              	.LVL13:
 435:core/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 323              		.loc 1 435 0
 324 0046 5968     		ldr	r1, [r3, #4]
 437:core/system_stm32f4xx.c ****       if (pllsource != 0)
 325              		.loc 1 437 0
 326 0048 10F4800F 		tst	r0, #4194304
 440:core/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 327              		.loc 1 440 0
 328 004c 5868     		ldr	r0, [r3, #4]
 329              	.LVL14:
 435:core/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 330              		.loc 1 435 0
 331 004e 01F03F02 		and	r2, r1, #63
 332              	.LVL15:
 440:core/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 333              		.loc 1 440 0
 334 0052 14BF     		ite	ne
 335 0054 4FF49053 		movne	r3, #4608
 445:core/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 336              		.loc 1 445 0
 337 0058 4FF41053 		moveq	r3, #9216
 338 005c C0F38811 		ubfx	r1, r0, #6, #9
 448:core/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 339              		.loc 1 448 0
 340 0060 4FF46050 		mov	r0, #14336
 440:core/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 341              		.loc 1 440 0
 342 0064 14BF     		ite	ne
 343 0066 C0F27A03 		movtne	r3, 122
 445:core/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 344              		.loc 1 445 0
 345 006a C0F2F403 		movteq	r3, 244
 448:core/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 346              		.loc 1 448 0
 347 006e C4F20200 		movt	r0, 16386
 445:core/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 348              		.loc 1 445 0
 349 0072 B3FBF2F3 		udiv	r3, r3, r2
 350 0076 03FB01F2 		mul	r2, r3, r1
 351              	.LVL16:
 448:core/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 352              		.loc 1 448 0
 353 007a 4168     		ldr	r1, [r0, #4]
 354              	.LVL17:
 355 007c C1F30143 		ubfx	r3, r1, #16, #2
 356 0080 581C     		adds	r0, r3, #1
 357 0082 4100     		lsls	r1, r0, #1
 358              	.LVL18:
 449:core/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 359              		.loc 1 449 0
 360 0084 B2FBF1F2 		udiv	r2, r2, r1
 361              	.LVL19:
 450:core/system_stm32f4xx.c ****       break;
 362              		.loc 1 450 0
 363 0088 C9E7     		b	.L30
 364              	.L39:
 365 008a 00BF     		.align	2
 366              	.L38:
 367 008c 00000000 		.word	.LANCHOR0
 368 0090 00000000 		.word	.LANCHOR1
 369              		.cfi_endproc
 370              	.LFE113:
 372              		.global	AHBPrescTable
 373              		.global	SystemCoreClock
 374 0094 AFF30080 		.section	.data.AHBPrescTable,"aw",%progbits
 374      AFF30080 
 374      AFF30080 
 375              		.align	2
 376              		.set	.LANCHOR0,. + 0
 379              	AHBPrescTable:
 380 0000 00       		.byte	0
 381 0001 00       		.byte	0
 382 0002 00       		.byte	0
 383 0003 00       		.byte	0
 384 0004 00       		.byte	0
 385 0005 00       		.byte	0
 386 0006 00       		.byte	0
 387 0007 00       		.byte	0
 388 0008 01       		.byte	1
 389 0009 02       		.byte	2
 390 000a 03       		.byte	3
 391 000b 04       		.byte	4
 392 000c 06       		.byte	6
 393 000d 07       		.byte	7
 394 000e 08       		.byte	8
 395 000f 09       		.byte	9
 396              		.section	.data.SystemCoreClock,"aw",%progbits
 397              		.align	2
 398              		.set	.LANCHOR1,. + 0
 401              	SystemCoreClock:
 402 0000 0095BA0A 		.word	180000000
 403              		.text
 404              	.Letext0:
 405              		.file 2 "/home/pedro/gcc-arm-none-eabi-4_7-2013q3/bin/../lib/gcc/arm-none-eabi/4.7.4/include/stdin
 406              		.file 3 "core/core_cm4.h"
 407              		.file 4 "core/stm32f4xx.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f4xx.c
     /tmp/ccQ2ElQF.s:21     .text.SystemInit:00000000 $t
     /tmp/ccQ2ElQF.s:27     .text.SystemInit:00000000 SystemInit
     /tmp/ccQ2ElQF.s:270    .text.SystemCoreClockUpdate:00000000 $t
     /tmp/ccQ2ElQF.s:276    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
     /tmp/ccQ2ElQF.s:367    .text.SystemCoreClockUpdate:0000008c $d
     /tmp/ccQ2ElQF.s:379    .data.AHBPrescTable:00000000 AHBPrescTable
     /tmp/ccQ2ElQF.s:401    .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/ccQ2ElQF.s:375    .data.AHBPrescTable:00000000 $d
     /tmp/ccQ2ElQF.s:397    .data.SystemCoreClock:00000000 $d
                     .debug_frame:00000010 $d
     /tmp/ccQ2ElQF.s:374    .text.SystemCoreClockUpdate:00000094 $t

NO UNDEFINED SYMBOLS
